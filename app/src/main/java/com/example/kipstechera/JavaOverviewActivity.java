package com.example.kipstechera;

import android.os.Bundle;
import android.text.Html;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class JavaOverviewActivity extends AppCompatActivity {
    private TextView noteTextView1;
    private TextView noteTextView2;
    private TextView noteTextView3;
    private TextView noteTextView4;

    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_java_overview);

        noteTextView1 = findViewById(R.id.JavaIntro);
        noteTextView2 = findViewById(R.id.JavaFeatures);
        noteTextView3 = findViewById(R.id.JavaHistory);
        noteTextView4 = findViewById(R.id.JavaTerminology);

        displayNotes();
    }

    private void displayNotes() {
        String htmlNotes1 = "<html><body>" +
                "<h1 align='center' color='blue'><u>Introduction to Java</u></h1>" +
                "<p>Java is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is intended to let application developers write once, and run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need for recompilation. Java was first released in 1995 and is widely used for developing applications for desktop, web, and mobile devices. Java is known for its simplicity, robustness, and security features, making it a popular choice for enterprise-level applications.\n" +
                "\n" +
                "JAVA was developed by James Gosling at Sun Microsystems Inc in the year 1995 and later acquired by Oracle Corporation. It is a simple programming language. Java makes writing, compiling, and debugging programming easy. It helps to create reusable code and modular programs. Java is a class-based, object-oriented programming language and is designed to have as few implementation dependencies as possible. A general-purpose programming language made for developers to write once run anywhere that is compiled Java code can run on all platforms that support Java. Java applications are compiled to byte code that can run on any Java Virtual Machine. The syntax of Java is similar to c/c++.</p>"+
                "<h2><U>Why  Use Java:</U></h2>"+
                "<ol><lI>Java works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc.)\n</li> " +
                "<li>It is open-source and free\n</li>" +
                "<li>It is one of the most popular programming languages in the world\n</li>" +
                "<li>It is easy to learn and simple to use</li>" +
                "<li>It has a large demand in the current job market\n</li>" +
                "<li>Java is an object oriented language which gives a clear structure to programs and allows code to be reused, lowering development costs\n</li>" +
                "<li>It has huge community support (tens of millions of developers)\n</li>" +
                "<li>As Java is close to C++ and C#, it makes it easy for programmers to switch to Java or vice versa\n</li>" +
                "<li>It is secure, fast and powerful</li>" +
                "</ol>"+
                "</body></html>";


        String htmlNotes2 = "<html><body>" +
                "<h1 align='center'>Features of Java</h1>" +
                "<ul type='1'>" +
                "<LI><b>Platform Independent: </b>Compiler converts source code to bytecode and then the JVM executes the bytecode generated by the compiler. This bytecode can run on any platform be it Windows, Linux, or macOS which means if we compile a program on Windows, then we can run it on Linux and vice versa. Each operating system has a different JVM, but the output produced by all the OS is the same after the execution of the bytecode. That is why we call java a platform-independent language.</li>" +
                "<LI><b>Object-Oriented Programming Language:</b>Organizing the program in the terms of a collection of objects is a way of object-oriented programming, each of which represents an instance of the class.\n" +
                "\n" +
                "The four main concepts of Object-Oriented programming are:\n" +
                "\n" +
                "Abstraction\n" +
                "Encapsulation\n" +
                "Inheritance\n" +
                "Polymorphism</li>" +
                "<LI><b>Simple:</b> Java is one of the simple languages as it does not have complex features like pointers, operator overloading, multiple inheritances, and Explicit memory allocation. \n</li>" +
                "<LI><b>Robust:</b>Java language is robust which means reliable. It is developed in such a way that it puts a lot of effort into checking errors as early as possible, that is why the java compiler is able to detect even those errors that are not easy to detect by another programming language. The main features of java that make it robust are garbage collection, Exception Handling, and memory allocation.\n</li>" +
                "<LI><b>Secure:</b>In java, we don’t have pointers, so we cannot access out-of-bound arrays i.e it shows ArrayIndexOutOfBound Exception if we try to do so. That’s why several security flaws like stack corruption or buffer overflow are impossible to exploit in Java. Also, java programs run in an environment that is independent of the os(operating system) environment which makes java programs more secure.</li>" +
                "<LI><b>High Performance:</b>Java architecture is defined in such a way that it reduces overhead during the runtime and at some times java uses Just In Time (JIT) compiler where the compiler compiles code on-demand basics where it only compiles those methods that are called making applications to execute faster.</li>" +
                "<LI><b>Multithreading:</b>Java supports multithreading. It is a Java feature that allows concurrent execution of two or more parts of a program for maximum utilization of the CPU.</li>" +
                "<LI><b>Distributed:</b>We can create distributed applications using the java programming language. Remote Method Invocation and Enterprise Java Beans are used for creating distributed applications in java. The java programs can be easily distributed on one or more systems that are connected to each other through an internet connection.</li>" +
                "<LI><b>Portable:</b> As we know, java code written on one machine can be run on another machine. The platform-independent feature of java in which its platform-independent bytecode can be taken to any platform for execution makes java portable.\n</li>" +
                "</ul>"+
                "</body></html>";
        String htmlNotes3 = "<html><body>" +
                "<h1 align='center'>History of Java</h1>"+
                "<p>Java’s history is very interesting. It is a programming language created in 1991. James Gosling, Mike Sheridan, and Patrick Naughton, a team of Sun engineers known as the Green team initiated the Java language in 1991. Sun Microsystems released its first public implementation in 1996 as Java 1.0. It provides no-cost -run-times on popular platforms. Java1.0 compiler was re-written in Java by Arthur Van Hoff to strictly comply with its specifications. With the arrival of Java 2, new versions had multiple configurations built for different types of platforms.\n" +
                "\n" +
                "In 1997, Sun Microsystems approached the ISO standards body and later formalized Java, but it soon withdrew from the process. At one time, Sun made most of its Java implementations available without charge, despite their proprietary software status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.\n" +
                "\n+" +
                "On November 13, 2006, Sun released much of its Java virtual machine as free, open-source software. On May 8, 2007, Sun finished the process, making all of its JVM’s core code available under open-source distribution terms.\n" +
                "\n" +
                "The principles for creating java were simple, robust, secured, high-performance, portable, multi-threaded, interpreted, dynamic, etc. In 1995 Java was developed by James Gosling, who is known as the Father of Java. Currently, Java is used in mobile devices, internet programming, games, e-business, etc.\n</p>" +
                "</body></html>";
        String htmlNotes4 = "<html><body>" +
                "<h1 align='center'>Java Terminologies:</h1>"+
                "<ul type='1'>" +
                "<LI><b>Java Virtual Machine(JVM):</b> This is generally referred to as JVM. There are three execution phases of a program. They are written, compile and run the program. Every Operating System has a different JVM but the output they produce after the execution of bytecode is the same across all the operating systems. This is why Java is known as a platform-independent language.</li>" +
                "<LI><b>Bytecode in the Development Process:</b> As discussed, the Javac compiler of JDK compiles the java source code into bytecode so that it can be executed by JVM. It is saved as .class file by the compiler. To view the bytecode, a disassembler like javap can be used.</li>" +
                "<LI><b>Java Development Kit(JDK):</b> While we were using the term JDK when we learn about bytecode and JVM. So, as the name suggests, it is a complete Java development kit that includes everything including compiler, Java Runtime Environment (JRE), java debuggers, java docs, etc. For the program to execute in java, we need to install JDK on our computer in order to create, compile and run the java program.\n</li>" +
                "<LI><b>Java Runtime Environment (JRE):</b>JDK includes JRE. JRE installation on our computers allows the java program to run, however, we cannot compile it. JRE includes a browser, JVM, applet support, and plugins. For running the java program, a computer needs JRE.\n</li>" +
                "<LI><b>Garbage Collector: </b>In Java, programmers can’t delete the objects. To delete or recollect that memory JVM has a program called Garbage Collector. Garbage Collectors can recollect the objects that are not referenced. So Java makes the life of a programmer easy by handling memory management. However, programmers should be careful about their code whether they are using objects that have been used for a long time. Because Garbage cannot recover the memory of objects being referenced.</li>" +
                "<LI><b>ClassPath:</b>The classpath is the file path where the java runtime and Java compiler look for .class files to load. By default, JDK provides many libraries. If you want to include external libraries they should be added to the classpath.</li>" +
                "</ul>"+
                "</body></html>";

                noteTextView1.setText(Html.fromHtml(htmlNotes1));
                noteTextView2.setText(Html.fromHtml(htmlNotes2));
                noteTextView3.setText(Html.fromHtml(htmlNotes3));
                noteTextView4.setText(Html.fromHtml(htmlNotes4));

    }
}

